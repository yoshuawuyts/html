{
  "tag_name": "input",
  "categories": [
    "Flow content.",
    "Phrasing content.",
    "If the type attribute is not in the Hidden state: Interactive content.",
    "If the type attribute is not in the Hidden state: Listed, labelable, submittable, resettable, and autocapitalize-inheriting form-associated element.",
    "If the type attribute is in the Hidden state: Listed, submittable, resettable, and autocapitalize-inheriting form-associated element.",
    "If the type attribute is not in the Hidden state: Palpable content."
  ],
  "submodule_name": "forms",
  "contexts": [
    "Where phrasing content is expected."
  ],
  "content_model": [
    "Nothing."
  ],
  "tag_omission": [
    "No end tag."
  ],
  "content_attributes": [
    "Global attributes",
    "accept —  Hint for expected file type in file upload controls\n     ",
    "alt —  Replacement text for use when images are not available\n     ",
    "autocomplete —  Hint for form autofill feature\n     ",
    "checked —  Whether the control is checked\n     ",
    "dirname —  Name of form control to use for sending the element's directionality in form submission\n     ",
    "disabled —  Whether the form control is disabled\n     ",
    "form —  Associates the element with a form element\n     ",
    "formaction —  URL to use for form submission\n     ",
    "formenctype —  Entry list encoding type to use for form submission\n     ",
    "formmethod —  Variant to use for form submission\n     ",
    "formnovalidate —  Bypass form control validation for form submission\n     ",
    "formtarget —  Navigable for form submission\n     ",
    "height —  Vertical dimension\n     ",
    "list —  List of autocomplete options\n     ",
    "max —  Maximum value\n     ",
    "maxlength —  Maximum length of value\n     ",
    "min —  Minimum value\n     ",
    "minlength —  Minimum length of value\n     ",
    "multiple —  Whether to allow multiple values\n     ",
    "name —  Name of the element to use for form submission and in the form.elements API \n     ",
    "pattern —  Pattern to be matched by the form control's value\n     ",
    "placeholder —  User-visible label to be placed within the form control\n     ",
    "popovertarget —  Targets a popover element to toggle, show, or hide\n     ",
    "popovertargetaction —  Indicates whether a targeted popover element is to be toggled, shown, or hidden\n     ",
    "readonly —  Whether to allow the value to be edited by the user\n     ",
    "required —  Whether the control is required for form submission\n     ",
    "size —  Size of the control\n     ",
    "src —  Address of the resource\n     ",
    "step —  Granularity to be matched by the form control's value\n     ",
    "type —  Type of form control\n     ",
    "value —  Value of the form control\n     ",
    "width —  Horizontal dimension\n     ",
    "Also, the title attribute has special semantics on this element:  Description of pattern (when used with pattern attribute)\n     "
  ],
  "dom_interface": [
    "\n    [Exposed=Window]\ninterface HTMLInputElement : HTMLElement {\n  [HTMLConstructor] constructor();\n\n  [CEReactions] attribute DOMString accept;\n  [CEReactions] attribute DOMString alt;\n  [CEReactions] attribute DOMString autocomplete;\n  [CEReactions] attribute boolean defaultChecked;\n  attribute boolean checked;\n  [CEReactions] attribute DOMString dirName;\n  [CEReactions] attribute boolean disabled;\n  readonly attribute HTMLFormElement? form;\n  attribute FileList? files;\n  [CEReactions] attribute USVString formAction;\n  [CEReactions] attribute DOMString formEnctype;\n  [CEReactions] attribute DOMString formMethod;\n  [CEReactions] attribute boolean formNoValidate;\n  [CEReactions] attribute DOMString formTarget;\n  [CEReactions] attribute unsigned long height;\n  attribute boolean indeterminate;\n  readonly attribute HTMLDataListElement? list;\n  [CEReactions] attribute DOMString max;\n  [CEReactions] attribute long maxLength;\n  [CEReactions] attribute DOMString min;\n  [CEReactions] attribute long minLength;\n  [CEReactions] attribute boolean multiple;\n  [CEReactions] attribute DOMString name;\n  [CEReactions] attribute DOMString pattern;\n  [CEReactions] attribute DOMString placeholder;\n  [CEReactions] attribute boolean readOnly;\n  [CEReactions] attribute boolean required;\n  [CEReactions] attribute unsigned long size;\n  [CEReactions] attribute USVString src;\n  [CEReactions] attribute DOMString step;\n  [CEReactions] attribute DOMString type;\n  [CEReactions] attribute DOMString defaultValue;\n  [CEReactions] attribute [LegacyNullToEmptyString] DOMString value;\n  attribute object? valueAsDate;\n  attribute unrestricted double valueAsNumber;\n  [CEReactions] attribute unsigned long width;\n\n  undefined stepUp(optional long n = 1);\n  undefined stepDown(optional long n = 1);\n\n  readonly attribute boolean willValidate;\n  readonly attribute ValidityState validity;\n  readonly attribute DOMString validationMessage;\n  boolean checkValidity();\n  boolean reportValidity();\n  undefined setCustomValidity(DOMString error);\n\n  readonly attribute NodeList? labels;\n\n  undefined select();\n  attribute unsigned long? selectionStart;\n  attribute unsigned long? selectionEnd;\n  attribute DOMString? selectionDirection;\n  undefined setRangeText(DOMString replacement);\n  undefined setRangeText(DOMString replacement, unsigned long start, unsigned long end, optional SelectionMode selectionMode = \"preserve\");\n  undefined setSelectionRange(unsigned long start, unsigned long end, optional DOMString direction);\n\n  undefined showPicker();\n\n  // also has obsolete members\n};\nHTMLInputElement includes PopoverInvokerElement;\n   "
  ]
}