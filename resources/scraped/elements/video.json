{
  "tag_name": "video",
  "categories": [
    "Flow content.",
    "Phrasing content.",
    "Embedded content.",
    "If the element has a controls attribute: Interactive content.",
    "Palpable content."
  ],
  "submodule_name": "embedded-content",
  "contexts": [
    "Where embedded content is expected."
  ],
  "content_model": [
    "If the element has a src attribute:\n zero or more track elements, then\n transparent, but with no media element descendants.",
    "If the element does not have a src attribute: zero or more source elements, then\n zero or more track elements, then\n transparent, but with no media element descendants."
  ],
  "tag_omission": [
    "Neither tag is omissible."
  ],
  "content_attributes": [
    "Global attributes",
    "src —  Address of the resource\n     ",
    "crossorigin —  How the element handles crossorigin requests\n     ",
    "poster —  Poster frame to show prior to video playback\n     ",
    "preload —  Hints how much buffering the media resource will likely need\n     ",
    "autoplay —  Hint that the media resource can be started automatically when the page is loaded\n     ",
    "playsinline —  Encourage the user agent to display video content within the element's playback area\n     ",
    "loop —  Whether to loop the media resource\n     ",
    "muted —  Whether to mute the media resource by default\n     ",
    "controls —  Show user agent controls\n     ",
    "width —  Horizontal dimension\n     ",
    "height —  Vertical dimension\n     "
  ],
  "dom_interface": [
    "\n    [Exposed=Window]\ninterface HTMLVideoElement : HTMLMediaElement {\n  [HTMLConstructor] constructor();\n\n  [CEReactions] attribute unsigned long width;\n  [CEReactions] attribute unsigned long height;\n  readonly attribute unsigned long videoWidth;\n  readonly attribute unsigned long videoHeight;\n  [CEReactions] attribute USVString poster;\n  [CEReactions] attribute boolean playsInline;\n};\n   "
  ]
}